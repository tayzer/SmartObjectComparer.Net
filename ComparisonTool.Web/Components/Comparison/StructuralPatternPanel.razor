@namespace ComparisonTool.Web.Components.Comparison
@using ComparisonTool.Core.Comparison.Analysis
@using KellermanSoftware.CompareNetObjects

<div class="card mb-4">
    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
        <h5 class="mb-0">Structural Pattern Analysis</h5>
        <div>
            <button class="btn btn-sm btn-light me-2" @onclick="ToggleView">
                @(ShowDetailedView ? "Show Summary" : "Show Details")
            </button>
        </div>
    </div>
    
    <div class="card-body">
        @if (Analysis == null || !Analysis.AllPatterns.Any())
        {
            <div class="alert alert-info">
                No significant structural patterns found in the comparison results.
            </div>
        }
        else
        {
            <p class="mb-3">
                This analysis identifies structural patterns in differences across files, 
                focusing on consistently missing elements in collections, property patterns, and potential schema issues.
            </p>
            
            @if (!ShowDetailedView)
            {
                <div>
                    <h6>Summary of Patterns (@Analysis.AllPatterns.Count)</h6>
                    <div class="table-responsive">
                        <table class="table table-sm table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>Pattern</th>
                                    <th>Description</th>
                                    <th>Files</th>
                                    <th>Occurrences</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var pattern in Analysis.AllPatterns.OrderByDescending(p => p.Consistency).Take(10))
                                {
                                    <tr @onclick="() => SetSelectedPattern(pattern)" class="cursor-pointer">
                                        <td><code>@pattern.FullPattern</code></td>
                                        <td>@(pattern.IsCollectionElement ? "Collection Element" : "Property")</td>
                                        <td>@pattern.FileCount (@pattern.Consistency.ToString("0.0")%)</td>
                                        <td>@pattern.OccurrenceCount</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
            else
            {
                <ul class="nav nav-tabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link @(ActiveTab == "missing" ? "active" : "")" 
                                @onclick="@(() => ActiveTab = "missing")">
                            Missing Collection Elements (@Analysis.MissingCollectionElements.Count)
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link @(ActiveTab == "properties" ? "active" : "")" 
                                @onclick="@(() => ActiveTab = "properties")">
                            Missing Properties (@Analysis.ConsistentlyMissingProperties.Count)
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link @(ActiveTab == "order" ? "active" : "")" 
                                @onclick="@(() => ActiveTab = "order")">
                            Element Order (@Analysis.ElementOrderDifferences.Count)
                        </button>
                    </li>
                </ul>
                
                <div class="tab-content p-3 border border-top-0 rounded-bottom">
                    @if (ActiveTab == "missing")
                    {
                        <h6>Missing Collection Elements</h6>
                        <div class="small text-muted mb-3">
                            Identifies properties that are consistently missing from collection elements across multiple files.
                        </div>
                        
                        @if (!Analysis.MissingCollectionElements.Any())
                        {
                            <div class="alert alert-info">No recurring missing elements detected.</div>
                        }
                        else
                        {
                            <PatternListView Patterns="Analysis.MissingCollectionElements" 
                                           OnSelectPattern="SetSelectedPattern" />
                        }
                    }
                    
                    @if (ActiveTab == "properties")
                    {
                        <h6>Consistently Missing Properties</h6>
                        <div class="small text-muted mb-3">
                            Properties that are consistently missing across files.
                        </div>
                        
                        @if (!Analysis.ConsistentlyMissingProperties.Any())
                        {
                            <div class="alert alert-info">No consistently missing properties detected.</div>
                        }
                        else
                        {
                            <PatternListView Patterns="Analysis.ConsistentlyMissingProperties" 
                                           OnSelectPattern="SetSelectedPattern" />
                        }
                    }
                    
                    @if (ActiveTab == "order")
                    {
                        <h6>Element Order Differences</h6>
                        <div class="small text-muted mb-3">
                            Collection elements that appear to be in different order.
                        </div>
                        
                        @if (!Analysis.ElementOrderDifferences.Any())
                        {
                            <div class="alert alert-info">No element order differences detected.</div>
                        }
                        else
                        {
                            <PatternListView Patterns="Analysis.ElementOrderDifferences" 
                                           OnSelectPattern="SetSelectedPattern" />
                        }
                    }
                </div>
            }
            
            @if (SelectedPattern != null)
            {
                <div class="mt-4 border rounded p-3">
                    <div class="d-flex justify-content-between">
                        <h6>Pattern Details</h6>
                        <button class="btn btn-sm btn-outline-secondary" @onclick="() => SelectedPattern = null">
                            <i class="bi bi-x"></i>
                        </button>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <table class="table table-sm">
                                <tr>
                                    <th>Parent Path:</th>
                                    <td><code>@SelectedPattern.ParentPath</code></td>
                                </tr>
                                <tr>
                                    <th>Missing Property:</th>
                                    <td><code>@SelectedPattern.MissingProperty</code></td>
                                </tr>
                                <tr>
                                    <th>Category:</th>
                                    <td>@SelectedPattern.Category</td>
                                </tr>
                                <tr>
                                    <th>Consistency:</th>
                                    <td>@SelectedPattern.Consistency.ToString("0.0")% of files with differences</td>
                                </tr>
                                <tr>
                                    <th>Type:</th>
                                    <td>@(SelectedPattern.IsCollectionElement ? "Collection Element" : "Object Property")</td>
                                </tr>
                            </table>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-2">
                                <strong>Pattern:</strong>
                                <p class="mb-1"><code>@SelectedPattern.FullPattern</code></p>
                            </div>
                            <div>
                                <strong>Collection:</strong>
                                <p class="mb-0">@(string.IsNullOrEmpty(SelectedPattern.CollectionName) ? "N/A" : SelectedPattern.CollectionName)</p>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mt-3">
                        <h6>Example Differences:</h6>
                        <div class="table-responsive">
                            <table class="table table-sm table-striped">
                                <thead>
                                    <tr>
                                        <th>Property</th>
                                        <th>Expected</th>
                                        <th>Actual</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var diff in SelectedPattern.Examples.Take(3))
                                    {
                                        <tr>
                                            <td><code>@diff.PropertyName</code></td>
                                            <td>@FormatValue(diff.Object1Value)</td>
                                            <td>@FormatValue(diff.Object2Value)</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    
                    <div class="mt-3">
                        <h6>Affected Files (@SelectedPattern.FileCount):</h6>
                        <div class="affected-files-list">
                            @foreach (var file in SelectedPattern.AffectedFiles.Take(5))
                            {
                                <div class="mb-1 small">@file</div>
                            }
                            @if (SelectedPattern.AffectedFiles.Count > 5)
                            {
                                <div class="small text-muted">...and @(SelectedPattern.AffectedFiles.Count - 5) more files</div>
                            }
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

@code {
    [Parameter]
    public StructuralDifferenceAnalyzer.StructuralAnalysisResult Analysis { get; set; }
    
    private bool ShowDetailedView { get; set; } = false;
    private string ActiveTab { get; set; } = "missing";
    private StructuralDifferenceAnalyzer.StructuralPattern SelectedPattern { get; set; }
    
    private void ToggleView()
    {
        ShowDetailedView = !ShowDetailedView;
    }
    
    private void SetSelectedPattern(StructuralDifferenceAnalyzer.StructuralPattern pattern)
    {
        SelectedPattern = pattern;
    }
    
    private string FormatValue(object value)
    {
        if (value == null) return "<null>";
        
        if (value is string str && str.Length > 50)
            return str.Substring(0, 47) + "...";
            
        if (value is DateTime dt)
            return dt.ToString("yyyy-MM-dd HH:mm:ss");
            
        return value.ToString();
    }
} 